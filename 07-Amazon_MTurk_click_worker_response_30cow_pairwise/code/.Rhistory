cowLR_response_pass_both <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_both.csv", header = TRUE)
expert_response <- read.csv(paste0(answer_dir, "/winner_loser_avg.csv"), header = TRUE)
STR(expert_response)
str(expert_response)
# load packages
library(ggplot2)
library(lubridate)
library(pdftools)
library("plyr")
library(tidyverse)
library(irr)
library(corrplot)
library(clValid)
library(gridExtra)
library(grid)
source("55HIT_easy_hard_question_assess_helpers.R")
################################################################################
################################ Load Data #####################################
################################################################################
input_dir <- "../results"
answer_dir <- "../../05-Amazon_MTurk_expert_response_30cow_pairwise/results/all_experts"
output_dir <- "../results"
# read in the worker response data
cowLR_response <- read.csv("../results/cowLR_response_clickWorker_55HITs.csv", header = TRUE)
cowLR_response_pass_pos <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_pos.csv", header = TRUE)
cowLR_response_pass_neg <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_neg.csv", header = TRUE)
cowLR_response_pass_both <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_both.csv", header = TRUE)
expert_response <- read.csv(paste0(answer_dir, "/all_HIT_answer_wali_dan_NV_SB.csv"), header = TRUE)
View(expert_response)
############## click worker interoserver reliability for each HIT ##############
# inter-click worker ICC
result <- compute_inter_rater_ICC(cowLR_response)
worker_compare <- result$worker_compare
icc_summary <- result$icc_summary
print(icc_summary)
######## click worker average VS expert average interoserver reliability #######
# get the average response from click worker VS experts
compare_click_worker_expert <- compute_icc_click_worker_expert(cowLR_response, expert_response, "all worker")
# calculate and plot direct_pct
worker_response_summary <- calculate_and_plot_direct_pct(worker_compare, compare_click_worker_expert, "all worker")
# calculate sd for each question
click_worker_response_sd_expert_avg <- compare_click_worker_sd_and_expert_avg(cowLR_response, expert_response)
plot(click_worker_response_sd_expert_avg$expert_avg,click_worker_response_sd_expert_avg$click_worker_sd,
ylab="click worker response SD",xlab="Average expert rating",xlim=c(-3,3),ylim=c(0, 3),
pch=19, frame.plot=F)
# test plot average click worker response VS directionality percentage
worker_response_summary$q_type <- "easy"
worker_response_summary$q_type[which(abs(worker_response_summary$expert_avg) <1)] <- "hard"
color_mapping <- c(easy = "green", hard = "red")
plot(worker_response_summary$click_worker_avg, worker_response_summary$dirct_pct,
ylab = "click worker directionaltiy percentage",
xlab = "click worker avg",
xlim = c(-3, 3),
ylim = c(0, 100),
col = color_mapping[worker_response_summary$q_type],
pch = 19,
frame.plot = F)
############## click worker interoserver reliability for each HIT ##############
result <- compute_inter_rater_ICC(cowLR_response_pass_pos)
worker_compare_pass_pos <- result$worker_compare
icc_summary_pass_pos <- result$icc_summary
print(icc_summary_pass_pos)
######## click worker average VS expert average interoserver reliability #######
compare_click_worker_expert_pass_pos <- compute_icc_click_worker_expert(cowLR_response_pass_pos, expert_response, "pass positive")
# calculate and plot direct_pct
worker_response_summary_pass_pos <- calculate_and_plot_direct_pct(worker_compare_pass_pos, compare_click_worker_expert_pass_pos,  "pass positive")
################################################################################
##################### workers who pass negative attention check ################
################################################################################
############## click worker interoserver reliability for each HIT ##############
result <- compute_inter_rater_ICC(cowLR_response_pass_neg)
worker_compare_pass_neg <- result$worker_compare
icc_summary_pass_neg <- result$icc_summary
print(icc_summary_pass_neg)
######## click worker average VS expert average interoserver reliability #######
compare_click_worker_expert_pass_neg <- compute_icc_click_worker_expert(cowLR_response_pass_neg, expert_response, "pass negative")
# calculate and plot direct_pct
worker_response_summary_pass_neg <- calculate_and_plot_direct_pct(worker_compare_pass_neg, compare_click_worker_expert_pass_neg, "pass negative")
############## click worker interoserver reliability for each HIT ##############
result <- compute_inter_rater_ICC(cowLR_response_pass_both)
worker_compare_pass_both <- result$worker_compare
icc_summary_pass_both <- result$icc_summary
print(icc_summary_pass_both)
######## click worker average VS expert average interoserver reliability #######
compare_click_worker_expert_pass_both <- compute_icc_click_worker_expert(cowLR_response_pass_both, expert_response, "pass both")
# calculate and plot direct_pct
worker_response_summary_pass_both <- calculate_and_plot_direct_pct(worker_compare_pass_both, compare_click_worker_expert_pass_both, "pass both")
################################################################################
############################## workers clustering ##############################
################################################################################
############################ all worker clustered ##############################
worker_compare_cl <- cluster_worker(worker_compare)
compare_click_worker_expert_cl <- compute_icc_click_worker_expert_cl(worker_compare_cl, expert_response, "cluster")
# calculate and plot direct_pct
worker_response_summary_cl<- calculate_and_plot_direct_pct(worker_compare_cl, compare_click_worker_expert_cl, "cluster")
################### pass positive attention check clustered ####################
worker_compare_pass_pos_cl <- cluster_worker(worker_compare_pass_pos)
compare_click_worker_expert_pass_pos_cl <- compute_icc_click_worker_expert_cl(worker_compare_pass_pos_cl, expert_response, "pass positive cluster")
# calculate and plot direct_pct
worker_response_summary_pass_pos_cl<- calculate_and_plot_direct_pct(worker_compare_pass_pos_cl, compare_click_worker_expert_pass_pos_cl, "pass positive cluster")
################### pass negative attention check clustered ####################
worker_compare_pass_neg_cl <- cluster_worker(worker_compare_pass_neg)
compare_click_worker_expert_pass_neg_cl <- compute_icc_click_worker_expert_cl(worker_compare_pass_neg_cl, expert_response, "pass negative cluster")
# calculate and plot direct_pct
worker_response_summary_pass_neg_cl<- calculate_and_plot_direct_pct(worker_compare_pass_neg_cl, compare_click_worker_expert_pass_neg_cl, "pass negative cluster")
###################### pass both attention check clustered #####################
worker_compare_pass_both_cl <- cluster_worker(worker_compare_pass_both)
compare_click_worker_expert_pass_both_cl <- compute_icc_click_worker_expert_cl(worker_compare_pass_both_cl, expert_response, "pass both cluster")
# calculate and plot direct_pct
worker_response_summary_pass_both_cl<- calculate_and_plot_direct_pct(worker_compare_pass_both_cl, compare_click_worker_expert_pass_both_cl, "pass both cluster")
View(worker_compare)
View(worker_compare[[1]])
View(worker_compare[[1]])
View(cowLR_response)
View(worker_compare[[21]])
View(cowLR_response)
colnames(cowLR_response)
test_same <- cowLR_response[, c("Worker_id", "HIT", "response")]
test_same_sum <- aggregate(test_same, by = list(test_same$response), FUN = SD)
test_same_sum <- aggregate(test_same, by = list(test_same$response), FUN = sd)
?aggregate
test_same_sum <- aggregate(test_same, by = list(test_same$response), FUN = sd, na.action = na.omit)
test_same_sum <- aggregate(test_same, by = list(test_same$Worker_id, test_same$HIT), FUN = sd, na.action = na.omit)
test_same_sum <- aggregate(test_same, by = list(test_same$Worker_id, test_same$HIT), FUN = sd, na.omit = TRUE)
test_same_sum <- aggregate(test_same$response, by = list(test_same$Worker_id, test_same$HIT), FUN = sd, na.action = na.omit)
test_same_sum <- aggregate(test_same$response, by = list(test_same$Worker_id, test_same$HIT), FUN = sd)
View(test_same_sum)
sd(c(1, -1, 1, -1, 1, -1))
View(cowLR_response)
test <- cowLR_response[which((cowLR_response$Worker_id == "A14PFRHG0A2YY9") & (cowLR_response$HIT == 20)),]
View(test)
test <- cowLR_response[which((cowLR_response$Worker_id == "A14PFRHG0A2YY9") & (cowLR_response$HIT == 21)),]
View(test)
test <- cowLR_response[which((cowLR_response$Worker_id == "A14PFRHG0A2YY9") & (cowLR_response$HIT == 19)),]
test <- cowLR_response[which((cowLR_response$Worker_id == "A1IU5OP7BBZHZ7") & (cowLR_response$HIT == 21)),]
View(test)
test <- cowLR_response[which((cowLR_response$Worker_id == "A1IOMFFEKCWOIT") & (cowLR_response$HIT == 35)),]
test <- cowLR_response[which((cowLR_response$Worker_id == "A1XO6ONCCTBMKW") & (cowLR_response$HIT == 36)),]
View(test)
colnames(test_same_sum) <- c("Worker_id", "HIT", "sd")
to_delete <- test_same_sum[which(test_same_sum$sd == 0),]
View(to_delete)
View(worker_compare)
View(worker_compare[[2]])
to_delete
cowLR_input <- cowLR_response
nrow(to_delete) > 0
temp <- merge(cowLR_input, to_delete, all = True)
temp <- merge(cowLR_input, to_delete, all = TRUE)
View(temp)
temp <- temp[which(is.na(temp$sd)),]
View(temp)
View(temp)
View(temp)
View(cowLR_response)
colnames(cowLR_response)
temp <- temp[, c(colnames(cowLR_input))]
detect_worker_to_delete <- function(cowLR_input) {
# delete those who clicked the same answer across all questions in a HIT
test_same <- cowLR_input[, c("Worker_id", "HIT", "response")]
test_same_sum <- aggregate(test_same$response, by = list(test_same$Worker_id, test_same$HIT), FUN = sd)
colnames(test_same_sum) <- c("Worker_id", "HIT", "sd")
to_delete <- test_same_sum[which(test_same_sum$sd == 0),]
return(to_delete)
}
delete_worker_answer_same <- function(cowLR_input) {
to_delete <- detect_worker_to_delete(cowLR_input)
if (nrow(to_delete) > 0) {
# update on all cowLR sheets to delete those worker who answered the same across all questions in a HIT
temp <- merge(cowLR_input, to_delete, all = TRUE)
temp <- temp[which(is.na(temp$sd)),]
temp$sd <- NULL
temp <- temp[, c(colnames(cowLR_input))]
return(temp)
} else {
return(cowLR_input)
}
}
cowLR_response <- delete_worker_answer_same(cowLR_response)
cowLR_response_pass_pos <- delete_worker_answer_same(cowLR_response_pass_pos)
cowLR_response_pass_neg <- delete_worker_answer_same(cowLR_response_pass_neg)
cowLR_response_pass_both <- delete_worker_answer_same(cowLR_response_pass_both)
############## click worker interoserver reliability for each HIT ##############
# inter-click worker ICC
result <- compute_inter_rater_ICC(cowLR_response)
worker_compare <- result$worker_compare
icc_summary <- result$icc_summary
print(icc_summary)
compute_inter_rater_ICC <- function(df) {
df <- df[which(df$HIT > 0),]
worker_res <- cowLR_process(df)
# Assuming reshape_worker_responses and compute_icc_for_data
# functions are already defined
all_HIT <- unique(worker_res$Task_number)
worker_compare <- list()
allworker_icc <- data.frame()
for(i in 1:length(all_HIT)) {
cur_HIT <- all_HIT[i]
worker_compare[[i]] <- reshape_worker_responses(worker_res, cur_HIT, delete_NA = TRUE)
icc_value <- compute_icc_for_data(worker_compare[[i]])
allworker_icc <- rbind(allworker_icc, data.frame(HIT = cur_HIT, click_worker_interobserver = icc_value))
}
icc_summary <- compute_icc_summary(allworker_icc)
return(list(worker_compare = worker_compare, icc_summary = icc_summary))
}
directionality_pct <- function(x) {
pos_count <- sum(x > 0)
neg_count <- sum(x < 0)
max_count <- max(pos_count, neg_count)
return(round((max_count / length(x)) * 100, 2))
}
result <- compute_inter_rater_ICC(cowLR_response)
worker_compare <- result$worker_compare
icc_summary <- result$icc_summary
print(icc_summary)
compute_icc_summary <- function(allworker_icc) {
icc_mean <- mean(allworker_icc$click_worker_interobserver)
icc_sd <- sd(allworker_icc$click_worker_interobserver)
icc_min <- min(allworker_icc$click_worker_interobserver)
icc_max <- max(allworker_icc$click_worker_interobserver)
return(list(mean = icc_mean, sd = icc_sd, min = icc_min, max = icc_max))
}
compute_inter_rater_ICC <- function(df) {
df <- df[which(df$HIT > 0),]
worker_res <- cowLR_process(df)
# Assuming reshape_worker_responses and compute_icc_for_data
# functions are already defined
all_HIT <- unique(worker_res$Task_number)
worker_compare <- list()
allworker_icc <- data.frame()
for(i in 1:length(all_HIT)) {
cur_HIT <- all_HIT[i]
worker_compare[[i]] <- reshape_worker_responses(worker_res, cur_HIT, delete_NA = TRUE)
icc_value <- compute_icc_for_data(worker_compare[[i]])
allworker_icc <- rbind(allworker_icc, data.frame(HIT = cur_HIT, click_worker_interobserver = icc_value))
}
icc_summary <- compute_icc_summary(allworker_icc)
return(list(worker_compare = worker_compare, icc_summary = icc_summary))
}
# inter-click worker ICC
result <- compute_inter_rater_ICC(cowLR_response)
worker_compare <- result$worker_compare
icc_summary <- result$icc_summary
print(icc_summary)
df = cowLR_response
df <- df[which(df$HIT > 0),]
worker_res <- cowLR_process(df)
# Assuming reshape_worker_responses and compute_icc_for_data
# functions are already defined
all_HIT <- unique(worker_res$Task_number)
worker_compare <- list()
allworker_icc <- data.frame()
for(i in 1:length(all_HIT)) {
cur_HIT <- all_HIT[i]
worker_compare[[i]] <- reshape_worker_responses(worker_res, cur_HIT, delete_NA = TRUE)
icc_value <- compute_icc_for_data(worker_compare[[i]])
allworker_icc <- rbind(allworker_icc, data.frame(HIT = cur_HIT, click_worker_interobserver = icc_value))
}
View(allworker_icc)
View(worker_compare)
View(worker_compare[[54]])
######## click worker average VS expert average interoserver reliability #######
# get the average response from click worker VS experts
compare_click_worker_expert <- compute_icc_click_worker_expert(cowLR_response, expert_response, "all worker")
# calculate and plot direct_pct
worker_response_summary <- calculate_and_plot_direct_pct(worker_compare, compare_click_worker_expert, "all worker")
# load packages
library(ggplot2)
library(lubridate)
library(pdftools)
library("plyr")
library(tidyverse)
library(irr)
library(corrplot)
library(clValid)
library(gridExtra)
library(grid)
source("55HIT_easy_hard_question_assess_helpers.R")
################################################################################
################################ Load Data #####################################
################################################################################
input_dir <- "../results"
answer_dir <- "../../05-Amazon_MTurk_expert_response_30cow_pairwise/results/all_experts"
output_dir <- "../results"
# read in the worker response data
cowLR_response <- read.csv("../results/cowLR_response_clickWorker_55HITs.csv", header = TRUE)
cowLR_response_pass_pos <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_pos.csv", header = TRUE)
cowLR_response_pass_neg <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_neg.csv", header = TRUE)
cowLR_response_pass_both <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_both.csv", header = TRUE)
expert_response <- read.csv(paste0(answer_dir, "/all_HIT_answer_DW_NV_SB.csv"), header = TRUE)
# delete those who clicked the same answer across all questions in a HIT
cowLR_response <- delete_worker_answer_same(cowLR_response)
cowLR_response_pass_pos <- delete_worker_answer_same(cowLR_response_pass_pos)
cowLR_response_pass_neg <- delete_worker_answer_same(cowLR_response_pass_neg)
cowLR_response_pass_both <- delete_worker_answer_same(cowLR_response_pass_both)
################################################################################
################################# All worker ###################################
################################################################################
############## click worker interoserver reliability for each HIT ##############
# inter-click worker ICC
result <- compute_inter_rater_ICC(cowLR_response)
worker_compare <- result$worker_compare
icc_summary <- result$icc_summary
print(icc_summary)
######## click worker average VS expert average interoserver reliability #######
# get the average response from click worker VS experts
compare_click_worker_expert <- compute_icc_click_worker_expert(cowLR_response, expert_response, "all worker")
# calculate and plot direct_pct
worker_response_summary <- calculate_and_plot_direct_pct(worker_compare, compare_click_worker_expert, "all worker")
library(readr)
master_all_responses_click_worker_Aug_02_2023 <- read_csv("~/Library/CloudStorage/OneDrive-UBC/R package project and Git/lameness_rank/07-Amazon_MTurk_click_worker_response_30cow_pairwise/results/master_all_responses_click_worker_Aug-02-2023.csv")
View(master_all_responses_click_worker_Aug_02_2023)
library(readr)
master_all_responses_click_worker_Sep_13_2023 <- read_csv("~/Library/CloudStorage/OneDrive-UBC/R package project and Git/lameness_rank/07-Amazon_MTurk_click_worker_response_30cow_pairwise/results/master_all_responses_click_worker_Sep-13-2023.csv")
View(master_all_responses_click_worker_Sep_13_2023)
library(readr)
master_all_responses_click_worker_44HITsOct_01_2023 <- read_csv("~/Library/CloudStorage/OneDrive-UBC/R package project and Git/lameness_rank/07-Amazon_MTurk_click_worker_response_30cow_pairwise/results/master_all_responses_click_worker_44HITsOct-01-2023.csv")
View(master_all_responses_click_worker_44HITsOct_01_2023)
View(cowLR_response)
View(expert_response)
library(readr)
master_all_responses_click_worker_44HITsOct_01_2023 <- read_csv("~/Library/CloudStorage/OneDrive-UBC/R package project and Git/lameness_rank/07-Amazon_MTurk_click_worker_response_30cow_pairwise/results/master_all_responses_click_worker_44HITsOct-01-2023.csv")
View(master_all_responses_click_worker_44HITsOct_01_2023)
test <- unique(master_all_responses_click_worker_44HITsOct_01_2023[, c("worker_ip", "Worker_id")])
View(test)
test <- na.omit(test)
duplicates <- duplicated(test$worker_ip)
# Print out the duplicated values
duplicated_values <- test$worker_ip[duplicates]
library(readr)
master_all_responses_click_worker_Sep_13_2023 <- read_csv("~/Library/CloudStorage/OneDrive-UBC/R package project and Git/lameness_rank/07-Amazon_MTurk_click_worker_response_30cow_pairwise/results/master_all_responses_click_worker_Sep-13-2023.csv")
View(master_all_responses_click_worker_Sep_13_2023)
test <- unique(master_all_responses_click_worker_Sep_13_2023[, c("worker_ip", "Worker_id")])
test <- na.omit(test)
duplicates <- duplicated(test$worker_ip)
# Print out the duplicated values
duplicated_values <- test$worker_ip[duplicates]
load("/Users/skysheng/Library/CloudStorage/OneDrive-UBC/University of British Columbia/Research/PhD Project/Lameness one year trial/Super Computer Computation/hobo_insentec_round6/result/HOBO_insentec_milking/Insentec/Feeding_drinking_at_the_same_time_total_time.Rda")
View(Feeding_drinking_at_the_same_time_total_time)
Feeding_drinking_at_the_same_time_total_time[["2020-07-15"]]
load("/Users/skysheng/Library/CloudStorage/OneDrive-UBC/University of British Columbia/Research/PhD Project/Lameness one year trial/Super Computer Computation/hobo_insentec_round6/result/HOBO_insentec_milking/Insentec/average_number_of_feeding_buddies.rda")
View(average_number_of_feeding_buddies)
View(average_number_of_feeding_buddies[["2020-07-15"]])
View(average_number_of_feeding_buddies[["2020-07-23"]])
View(average_number_of_feeding_buddies[["2020-09-20"]])
View(average_number_of_feeding_buddies[["2020-11-12"]])
View(average_number_of_feeding_buddies[["2020-11-13"]])
load("/Users/skysheng/Library/CloudStorage/OneDrive-UBC/University of British Columbia/Research/PhD Project/Lameness one year trial/Super Computer Computation/hobo_insentec_round6/result/HOBO_insentec_milking/Insentec/Replacement_behaviour_by_date.Rda")
View(Replacement_behaviour_by_date)
View(average_number_of_feeding_buddies[["2020-09-14"]])
View(average_number_of_feeding_buddies[["2020-09-10"]])
View(average_number_of_feeding_buddies[["2020-09-11"]])
View(average_number_of_feeding_buddies[["2020-07-19"]])
View(Replacement_behaviour_by_date[["2020-09-28"]])
View(cowLR_response)
View(expert_response)
# load packages
library(ggplot2)
library(lubridate)
library(pdftools)
library("plyr")
library(tidyverse)
library(irr)
library(corrplot)
library(clValid)
library(gridExtra)
library(grid)
source("55HIT_easy_hard_question_assess_helpers.R")
################################################################################
################################ Load Data #####################################
################################################################################
input_dir <- "../results"
answer_dir <- "../../05-Amazon_MTurk_expert_response_30cow_pairwise/results/all_experts"
output_dir <- "../results"
# read in the worker response data
cowLR_response <- read.csv("../results/cowLR_response_clickWorker_55HITs.csv", header = TRUE)
cowLR_response_pass_pos <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_pos.csv", header = TRUE)
cowLR_response_pass_neg <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_neg.csv", header = TRUE)
cowLR_response_pass_both <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_both.csv", header = TRUE)
expert_response <- read.csv(paste0(answer_dir, "/all_HIT_answer_DW_NV_SB.csv"), header = TRUE)
################################################################################
################################### cleaning ###################################
################################################################################
# delete those who clicked the same answer across all questions in a HIT
cowLR_response <- delete_worker_answer_same(cowLR_response)
cowLR_response_pass_pos <- delete_worker_answer_same(cowLR_response_pass_pos)
cowLR_response_pass_neg <- delete_worker_answer_same(cowLR_response_pass_neg)
cowLR_response_pass_both <- delete_worker_answer_same(cowLR_response_pass_both)
################################################################################
################################# All worker ###################################
################################################################################
############## click worker interoserver reliability for each HIT ##############
# inter-click worker ICC
result <- compute_inter_rater_ICC(cowLR_response)
worker_compare <- result$worker_compare
icc_summary <- result$icc_summary
print(icc_summary)
######## click worker average VS expert average interoserver reliability #######
# get the average response from click worker VS experts
compare_click_worker_expert <- compute_icc_click_worker_expert(cowLR_response, expert_response, "all worker")
# calculate and plot direct_pct
worker_response_summary <- calculate_and_plot_direct_pct(worker_compare, compare_click_worker_expert, "all worker")
load("/Users/skysheng/Library/CloudStorage/OneDrive-UBC/University of British Columbia/Research/PhD Project/Lameness one year trial/Super Computer Computation/hobo_insentec_round6/result/HOBO_insentec_milking/Insentec/Cleaned_feeding_original_data.Rda")
View(Cleaned_feeding_original_data)
View(Cleaned_feeding_original_data[["2020-07-15"]])
1383/60
# load packages
library(ggplot2)
library(lubridate)
library(pdftools)
library("plyr")
library(tidyverse)
library(irr)
library(corrplot)
library(clValid)
library(gridExtra)
library(grid)
source("55HIT_easy_hard_question_assess_helpers.R")
################################################################################
################################ Load Data #####################################
################################################################################
input_dir <- "../results"
answer_dir <- "../../05-Amazon_MTurk_expert_response_30cow_pairwise/results/all_experts"
output_dir <- "../results"
# read in the worker response data
cowLR_response <- read.csv("../results/cowLR_response_clickWorker_55HITs.csv", header = TRUE)
cowLR_response_pass_pos <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_pos.csv", header = TRUE)
cowLR_response_pass_neg <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_neg.csv", header = TRUE)
cowLR_response_pass_both <- read.csv("../results/cowLR_response_clickWorker_55HITs_pass_both.csv", header = TRUE)
expert_response <- read.csv(paste0(answer_dir, "/all_HIT_answer_DW_NV_SB.csv"), header = TRUE)
################################################################################
################################### cleaning ###################################
################################################################################
# delete those who clicked the same answer across all questions in a HIT
cowLR_response <- delete_worker_answer_same(cowLR_response)
cowLR_response_pass_pos <- delete_worker_answer_same(cowLR_response_pass_pos)
cowLR_response_pass_neg <- delete_worker_answer_same(cowLR_response_pass_neg)
cowLR_response_pass_both <- delete_worker_answer_same(cowLR_response_pass_both)
################################################################################
################################# All worker ###################################
################################################################################
############## click worker interoserver reliability for each HIT ##############
# inter-click worker ICC
result <- compute_inter_rater_ICC(cowLR_response)
worker_compare <- result$worker_compare
icc_summary <- result$icc_summary
print(icc_summary)
View(compare_click_worker_expert)
View(worker_compare)
View(worker_compare[[1]])
View(worker_compare[[53]])
df = cowLR_response
df <- df[which(df$HIT > 0),]
worker_res <- cowLR_process(df)
# Assuming reshape_worker_responses and compute_icc_for_data
# functions are already defined
all_HIT <- unique(worker_res$Task_number)
worker_compare <- list()
allworker_icc <- data.frame()
i = 1
cur_HIT <- all_HIT[i]
worker_compare[[i]] <- reshape_worker_responses(worker_res, cur_HIT, delete_NA = TRUE)
icc_value <- compute_icc_for_data(worker_compare[[i]])
allworker_icc <- rbind(allworker_icc, data.frame(HIT = cur_HIT, click_worker_interobserver = icc_value))
icc_value
length(all_HIT)
i = 54
cur_HIT <- all_HIT[i]
worker_compare[[i]] <- reshape_worker_responses(worker_res, cur_HIT, delete_NA = TRUE)
icc_value <- compute_icc_for_data(worker_compare[[i]])
allworker_icc <- rbind(allworker_icc, data.frame(HIT = cur_HIT, click_worker_interobserver = icc_value))
icc_value
df <- df[which(df$HIT > 0),]
worker_res <- cowLR_process(df)
# Assuming reshape_worker_responses and compute_icc_for_data
# functions are already defined
all_HIT <- unique(worker_res$Task_number)
worker_compare <- list()
allworker_icc <- data.frame()
for(i in 1:length(all_HIT)) {
cur_HIT <- all_HIT[i]
worker_compare[[i]] <- reshape_worker_responses(worker_res, cur_HIT, delete_NA = TRUE)
icc_value <- compute_icc_for_data(worker_compare[[i]])
allworker_icc <- rbind(allworker_icc, data.frame(HIT = cur_HIT, click_worker_interobserver = icc_value))
}
icc_summary <- compute_icc_summary(allworker_icc)
View(worker_compare)
View(worker_compare[[54]])
cowlR_expert <- read.csv(paste0(answer_dir, "/cowLR_response_DW_NV_SB.csv"), header = TRUE)
View(cowlR_expert)
View(cowLR_response_pass_both)
colnames(cowlR_expert)[colnames(cowlR_expert) == "expert"] <- "Worker_id"
expert_df<- cowlR_expert
dat_reshaped <- reshape(expert_df, idvar = c("cow_L","cow_R"), timevar = "Worker_id", direction = "wide")
View(dat_reshaped)
View(cowlR_expert)
bad_cols <- colnames(dat_reshaped)[colSums(is.na(dat_reshaped)) > 0]
bad_cols
if(delete_NA & (length(bad_cols) > 0)) {
dat_reshaped <- dat_reshaped[, -which(colnames(dat_reshaped) %in% bad_cols)]
}
View(dat_reshaped)
icc_value <- compute_icc_for_data(dat_reshaped)
icc_value
expert_dat_reshaped <- reshape(cowlR_expert, idvar = c("cow_L","cow_R"), timevar = "Worker_id", direction = "wide")
expert_icc_value <- compute_icc_for_data(expert_dat_reshaped)
expert_icc_value
######## click worker average VS expert average interoserver reliability #######
# get the average response from click worker VS experts
compare_click_worker_expert <- compute_icc_click_worker_expert(cowLR_response, expert_response, "all worker")
# calculate and plot direct_pct
169 + 266
