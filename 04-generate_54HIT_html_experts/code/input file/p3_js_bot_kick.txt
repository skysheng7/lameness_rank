                <div class="question" id="feedback">
                    <div class="questionDescription" style="margin-top: 2%;">
                        <p><strong style="font-size: 1.2em;">Contact: </strong> You are welcome to contact us if you have any feedback 
                        and suggestions about this HIT. You are also encouraged to email us if your work is rejected but you paid close 
                        attention when completing this HIT and want to be paid. Email: <strong><u> skysheng0306@gmail.com</u> </strong> </p>

                    </div>
                    

                </div>




    <div class="buttonContainer" style="margin-top: 2%;">
                    <crowd-button onclick="getPrevious()" class="controlBtn">
                        <span>Previous Question</span>
                    </crowd-button>
                    <crowd-button onclick="getNext()" class="controlBtn">
                        <span>Next Question</span>
                    </crowd-button>
                </div>
            

        </crowd-form>
    </div> 

    <script src="https://assets.crowd.aws/crowd-html-elements.js"></script>

    <script>
        const statement = document.getElementById("Statement")
        ${q_equs}
        const feedback = document.getElementById("feedback")
        const bCheck = document.getElementById("bCheck")

        const questions = [
            statement,
            ${q_list}
            feedback,
            bCheck
        ]

        let counter = 0;
        const numQuestions = ${total_q_num_js};

        for(let i = 0; i < numQuestions; i++){
            questions[i].style.display = i === counter ? "flex" : "none"
        }

    function isMobileDevice() {
        var isMobile = {
            Android: function () { return navigator.userAgent.match(/Android/i); },
            BlackBerry: function () { return navigator.userAgent.match(/BlackBerry/i); },
            iOS: function () { return navigator.userAgent.match(/iPhone|iPad|iPod/i); },
            Opera: function () { return navigator.userAgent.match(/Opera Mini/i); },
            Windows: function () { return navigator.userAgent.match(/IEMobile/i); },
            any: function () { return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows()); }
        };

        return isMobile.any();
    }

    function isBot() {
        const botCheckInput = document.getElementById("botCheck");
        return botCheckInput.value !== "";
    }


    function getNext() {
        if (isBot()) {
            alert("Bot detected. Access denied.");
            return;
        }  

        if (counter == 0 && isMobileDevice()) {
            alert('This HIT must be accomplished on PC/tablet/laptop. Please quit this HIT now because you are using a mobile device.');
            return;
        } else {
            if (counter < numQuestions - 1) {
                counter++;
                for (let i = 0; i < numQuestions; i++) {
                    questions[i].style.display = i === counter ? "flex" : "none";
                }
            }
        }
    }

    function getIpAddress() {
        fetch('https://api.ipify.org?format=json')
            .then((response) => response.json())
            .then((data) => {
                document.getElementById('worker_ip').value = data.ip;
            })
            .catch((error) => {
                console.error('Error fetching IP address:', error);
            });
    }

    window.addEventListener('load', getIpAddress);

    function getPrevious() {
            if (counter > 0) { 
                counter--;
                for(let i = 0; i < numQuestions; i++){
                    questions[i].style.display = i === counter ? "flex" : "none"
                }
            }
    }

    </script>

</body>

</html>
]]></HTMLContent>
<FrameHeight>0</FrameHeight>
</HTMLQuestion>